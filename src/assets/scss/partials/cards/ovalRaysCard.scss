/*____________________________________________________________
# Slide Button Variables
____________________________________________________________*/
$ovalRaysCardWidth: 200px;
$ovalRaysCardHeight: $ovalRaysCardWidth * 1.6;

$ovalRaysCardPadding: calc($ovalRaysCardWidth / 10);

$ovalRaysCard__innerWidth: $ovalRaysCardWidth - $ovalRaysCardPadding;
$ovalRaysCard__innerHeight: $ovalRaysCardHeight - $ovalRaysCardPadding;

$ovalRaysCard__ovarWidth: $ovalRaysCardWidth * .7;
$ovalRaysCard__ovarHeight: $ovalRaysCardHeight * .7;

/*____________________________________________________________
# Color Variables
____________________________________________________________*/
$x-color-orange: #ba5f4e;
$x-color-white: #ead9b0;
$x-color-yellow: #d9ae65;
$x-color-green: #81885f;

$palette-primary: $x-color-orange;
$palette-secondary: $x-color-white;

$palette-secondary-dark: darken($palette-secondary, 30%);
$x-color-yellow-dark: darken($x-color-yellow, 30%);
$x-color-green-dark: darken($x-color-green, 30%);

/*____________________________________________________________
# Rays Variables
____________________________________________________________*/
$raysColorArray: ($palette-primary, $palette-secondary, $x-color-yellow, $x-color-green);

$raysWidth: calc($ovalRaysCard__innerHeight / 12.5); // 24em
$raysHeight: calc($ovalRaysCard__innerWidth / 1); // 180em

$raysDegree: calc(360deg / (6 * length($raysColorArray)));

@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return math.div($number, $number * 0 + 1);
    }
    @return $number;
}

/// Convert value to em.
@function em($size, $base-font-size:16px) {
    @return calc(strip-unit($size) / strip-unit($base-font-size) * 1em);
}

/*____________________________________________________________
# Image Size Card Style
____________________________________________________________*/
.ovalRaysCard {
  position: relative;
  margin: 20px;
  width: $ovalRaysCardWidth;
  height: $ovalRaysCardHeight;
  background-color: $palette-primary;
  cursor: pointer;

  &:before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: calc(#{$ovalRaysCardWidth} - 10px);
    height: calc(#{$ovalRaysCardHeight} - 10px);
    border: 2.5px dotted $palette-secondary;
  }

  &:hover {
    .raysWrap {
      animation-play-state: running;
    }
    .raysOvalUp {
      transform: translate(-50%) scale(1);
    }
    .raysOvalMain {
      transform: translate(-50%, -50%) scale(1);
    }
  }

  &._ovalHide {
    &:hover {
      .raysOvalWrap {
        transform: translate(-50%, -50%) scale(0);
        transition-delay: 0s;
      }
    }
  }
}
.ovalRaysInner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: $ovalRaysCard__innerWidth;
  height: $ovalRaysCard__innerHeight;
  border-radius: 10px;
  background-color: $palette-secondary;
  overflow: hidden;
}

.raysWrap {
  position: absolute;
  left: -1em;
  right: -1em;
  top: -1em;
  bottom: -1em;
  margin: auto;
  padding: 0;
  width: 0;
  height: 0;
  animation: raysRotate 8s infinite linear;
  animation-play-state: paused;
}

.raysWrap__ray,
.raysWrap__ray:before,
.raysWrap__ray:after {
  position: absolute;
  border: 0 solid transparent;
  border-width: em($raysWidth) em($raysHeight);
  width: 0;
  height: 0;
}
.raysWrap__ray {
  left: -#{em($raysHeight)};
  top: calc(50% - #{em($raysWidth)});

  @for $i from 1 through length($raysColorArray) {
    &:nth-child(#{$i}){
      transform: rotate(calc(#{$raysDegree} * (#{$i} - 1)));
      border-color: transparent nth($raysColorArray, $i);

      &:before,
      &:after {
        border-color: transparent nth($raysColorArray, $i);
      }
    }
  }
}
.raysWrap__ray:before,
.raysWrap__ray:after {
  content: "";
  left: -#{em($raysHeight)};
  top: -#{em($raysWidth)};
}

.raysWrap__ray:before {
  transform: rotate(60deg);
}
.raysWrap__ray:after {
  transform: rotate(-60deg);
}

.raysOvalWrap {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(1);
  width: $ovalRaysCard__ovarWidth;
  height: $ovalRaysCard__ovarHeight;
  border-radius: 50%;
  background-color: $palette-primary;
  background-image: url('../img/cards/ovalRaysCard/lethalThreat_wBg_sm.png');
  background-position: 70% 120%;
  background-size: 70%;
  background-repeat: no-repeat;
  box-shadow: 2px 4px #673826;
  overflow: hidden;
  transition: transform .3s;
  transition-delay: .2s;
}

.raysOvalBtmEl {
  position: absolute;
  bottom: 7%;
  left: 50%;
  transform: translateX(-50%);
  width: 110px;
  height: 60px;
  // background-color: blue;
  background-image: url('../img/cards/ovalRaysCard/retroRadio.png');
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
}

.raysOvalTitle {
  position: absolute;
  top: 2%;
  left: 50%;
  transform: translateX(-50%);
  font-family: 'Lobster', cursive;
  font-size: 14px;
  text-transform: uppercase;
  white-space: nowrap;
  color: #8a4c33;
  text-shadow: .3px .3px #000;
}
.raysOvalEnd {
  position: absolute;
  bottom: 1%;
  left: 50%;
  transform: translateX(-50%);
  font-family: 'Lobster', cursive;
  font-size: 14px;
  text-transform: uppercase;
  white-space: nowrap;
  color: #8a4c33;
  text-shadow: .3px .3px #000;
}

.raysOvalUp {
  position: absolute;
  top: 20%;
  left: 50%;
  transform: translateX(-50%) scale(0);
  font-family: 'Lobster', cursive;
  font-size: 24px;
  white-space: nowrap;
  color: #fff;
  text-shadow: 2px 1px #000;
  transition: transform .2s;
}

.raysOvalMain {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  font-family: 'Lobster', cursive;
  font-size: 96px;
  letter-spacing: 10px;
  transition: transform .2s;
  transition-delay: .2s;
}
.raysOvalMain__number {
  &:nth-child(1) {
    color: $palette-secondary;
    text-shadow: 6px 3px $palette-secondary-dark;
  }
  &:nth-child(2) {
    color: $x-color-yellow;
    text-shadow: 6px 3px $x-color-yellow-dark;
  }
  &:nth-child(3) {
    color: $x-color-green;
    text-shadow: 6px 3px $x-color-green-dark;
  }
}

@keyframes raysRotate {
  100% {
    transform: rotate(360deg);
  }
}